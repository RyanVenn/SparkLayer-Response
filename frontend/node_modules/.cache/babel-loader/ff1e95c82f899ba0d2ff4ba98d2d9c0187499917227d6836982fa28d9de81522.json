{"ast":null,"code":"var _jsxFileName = \"/home/ryan/SparkLayer/Spark-Code-Test-Boilerplate-2024/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Todo from './Todo';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState(' ');\n\n  // Initially fetch todo\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const todos = await fetch('http://localhost:8080/');\n        if (todos.status !== 200) {\n          console.log('Error fetching data');\n          return;\n        }\n        setTodos(await todos.json());\n      } catch (e) {\n        console.log('Could not connect to server. Ensure it is running. ' + e);\n      }\n    };\n    fetchTodos();\n  }, []);\n\n  // Handles submitted ToDos\n  const submitToDo = async () => {\n    try {\n      fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title: title,\n          description: description\n        })\n      });\n    } catch (e) {\n      console.log('Could not submit To-Do ' + e);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"app-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"TODO\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(Todo, {\n        title: todo.title,\n        description: todo.description\n      }, todo.title + todo.description, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Title\",\n        name: \"title\",\n        autoFocus: true,\n        value: title,\n        onChange: val => setTitle(val.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Description\",\n        name: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: submitToDo,\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/fb0tI2utiK9nnAvrMCW0lKASPc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Todo","jsxDEV","_jsxDEV","App","_s","todos","setTodos","title","setTitle","description","setDescription","fetchTodos","fetch","status","console","log","json","e","submitToDo","method","headers","body","JSON","stringify","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","placeholder","name","autoFocus","value","onChange","val","target","onClick","_c","$RefreshReg$"],"sources":["/home/ryan/SparkLayer/Spark-Code-Test-Boilerplate-2024/frontend/src/App.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Todo, { TodoType } from './Todo';\n\nfunction App() {\n  const [todos, setTodos] = useState<TodoType[]>([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState(' ');\n\n  // Initially fetch todo\n  useEffect(() => {\n    const fetchTodos = async () => {\n      try {\n        const todos = await fetch('http://localhost:8080/');\n        if (todos.status !== 200) {\n          console.log('Error fetching data');\n          return;\n        }\n\n        setTodos(await todos.json());\n      } catch (e) {\n        console.log('Could not connect to server. Ensure it is running. ' + e);\n      }\n    }\n\n    fetchTodos()\n  }, []);\n\n  // Handles submitted ToDos\n  const submitToDo = async () => {\n    try {\n      fetch('http://localhost:8080/', {\n        method: 'POST',\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          title: title,\n          description: description\n        }),\n      });\n    } catch (e) {\n      console.log('Could not submit To-Do ' + e);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <header className=\"app-header\">\n        <h1>TODO</h1>\n      </header>\n\n      <div className=\"todo-list\">\n        {todos.map((todo) =>\n          <Todo\n            key={todo.title + todo.description}\n            title={todo.title}\n            description={todo.description}\n          />\n        )}\n      </div>\n\n      <h2>Add a Todo</h2>\n      <form>\n        <input placeholder=\"Title\" name=\"title\" autoFocus={true} value={title} onChange={(val) => setTitle(val.target.value)} />\n        <input placeholder=\"Description\" name=\"description\" />\n        <button onClick={submitToDo}>Add Todo</button>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}